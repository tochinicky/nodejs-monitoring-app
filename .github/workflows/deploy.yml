name: Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy via SSH
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_IP: ${{ secrets.VM_IP }}
          DOMAIN: ${{ secrets.DOMAIN }}
          CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=accept-new "${VM_USER}@${VM_IP}" << EOF
          set -euxo pipefail

          # 1. Verify DNS resolution first
          if ! dig +short ${DOMAIN} | grep -q ${VM_IP}; then
            echo "ERROR: DNS not pointing to server IP!"
            echo "Domain ${DOMAIN} must resolve to ${VM_IP}"
            exit 1
          fi

          # 2. Install dependencies
          sudo apt-get update
          sudo apt-get install -y nginx certbot python3-certbot-nginx nodejs npm

          # 3. Temporary Nginx config for DNS verification
          sudo tee /etc/nginx/sites-available/temp_verify << NGINX_TEMP
          server {
              listen 80;
              server_name ${DOMAIN};
              root /var/www/html;
              
              location /.well-known/acme-challenge/ {
                  allow all;
              }
          }
          NGINX_TEMP

          # 4. Enable temporary config
          sudo ln -sf /etc/nginx/sites-available/temp_verify /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default
          sudo nginx -t && sudo systemctl restart nginx

          # 5. Obtain certificate first
          sudo certbot certonly --nginx -n --agree-tos -m ${CERTBOT_EMAIL} -d ${DOMAIN} --keep-until-expiring

          # 6. Proceed with main installation
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs

          # ... rest of your original deployment steps ...
          # (PM2 setup, app deployment, final Nginx config, etc)
          EOF
