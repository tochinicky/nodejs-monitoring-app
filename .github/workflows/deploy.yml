name: Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy via SSH using Password
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} << 'EOF'
            set -e  # Stop execution if any command fails

            # Remove conflicting Node.js and npm versions
            sudo apt-get remove --purge -y nodejs npm
            sudo apt-get autoremove -y
            sudo apt-get autoclean -y
            sudo apt-get update

            # Install Node.js correctly
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs

            # Install npm separately
            sudo apt-get install -y npm

            # Verify installations
              node -v
              npm -v
            # Install required dependencies
            sudo apt update
            sudo apt install -y nginx certbot python3-certbot-nginx nodejs npm curl
            

            # Ensure PM2 is installed globally
            sudo npm install -g pm2
            export PATH=$PATH:$(npm bin -g)

            # Ensure the application directory exists
            if [ ! -d "/home/${{ secrets.VM_USER }}/nodejs-app" ]; then
              git clone https://github.com/tochinicky/nodejs-monitoring-app.git /home/${{ secrets.VM_USER }}/nodejs-app
            fi

            # Navigate to the app directory
            cd /home/${{ secrets.VM_USER }}/nodejs-app

            # Pull latest changes
            git pull origin main

            # Install Node.js dependencies
            npm install

            # Restart or start the app using PM2
            pm2 delete nodeapp || true
            pm2 start app.js --name nodeapp
            pm2 save
            pm2 startup systemd --user

            # Configure Nginx for reverse proxy with HTTPS
            sudo bash -c 'cat > /etc/nginx/sites-available/nodeapp << EOL
          server {
              listen 80;
              server_name devopshng.online;

              # Redirect HTTP to HTTPS
              return 301 https://$host$request_uri;
          }

          server {
            listen 443 ssl;
            server_name yourdomain.com;

            ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
            include /etc/letsencrypt/options-ssl-nginx.conf;

            location / {
                proxy_pass http://localhost:3001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
            }

            # Security Headers
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options nosniff;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
          }
            EOL'

            # Enable the Nginx configuration
            sudo ln -sf /etc/nginx/sites-available/nodeapp /etc/nginx/sites-enabled/
            sudo systemctl restart nginx

            # Obtain an SSL certificate using Certbot
            sudo certbot --nginx -d yourdomain.com --non-interactive --agree-tos -m your-email@example.com

            # Restart Nginx to apply SSL certificate
            sudo systemctl restart nginx
          EOF
